{
    "swagger": "2.0",
    "info": {
        "version": "2.0.0",
        "title": "Cherkasy Drama Theatre",
        "termsOfService": "http://theatre-shevchenko.ck.ua/en/terms/",
        "contact": {
            "name": "neek@geekhub.ck.ua"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "api.theatre.pp.ua",
    "basePath": "/v2/",
    "schemes": [
        "https"
    ],
    "paths": {
        "/employees": {
            "get": {
                "tags": [
                    "employees"
                ],
                "description": "Returns a collection of theatre employees",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Number of employees per one page",
                        "required": false,
                        "type": "integer",
                        "default": 10
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "in": "query",
                        "name": "locale",
                        "description": "Language of data you want to receive",
                        "required": false,
                        "type": "string",
                        "default": "uk",
                        "enum": [
                            "uk",
                            "en"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "$ref": "#/definitions/PaginationLinks"
                                },
                                "page": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "total_count": {
                                    "type": "integer",
                                    "example": 65
                                },
                                "employees": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Employee"
                                    }
                                },
                                "count": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when the entities with given limit and offset are not found"
                    }
                }
            }
        },
        "/employees/{slug}": {
            "get": {
                "tags": [
                    "employees"
                ],
                "description": "Returns an Employee by unique property {slug}",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "description": "Slug of employee in database",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-z\\d-]+$"
                    },
                    {
                        "in": "query",
                        "name": "locale",
                        "description": "Language of data you want to receive",
                        "required": false,
                        "type": "string",
                        "default": "uk",
                        "enum": [
                            "uk",
                            "en"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        }
                    },
                    "404": {
                        "description": "Returned when employee by {slug} not found in database"
                    }
                }
            }
        },
        "/employees/{slug}/roles": {
            "get": {
                "tags": [
                    "employees"
                ],
                "description": "Returns an Employee roles by unique property {slug}",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "description": "Slug of employee in database",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-z\\d-]+$"
                    },
                    {
                        "in": "query",
                        "name": "locale",
                        "description": "Language of data you want to receive",
                        "required": false,
                        "type": "string",
                        "default": "uk",
                        "enum": [
                            "uk",
                            "en"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Role"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when employee by {slug} not found in database"
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "Return collection of posts",
                "description": "Multiple status values can be provided with comma separated strings",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Count entries at one page",
                        "required": false,
                        "type": "integer",
                        "default": 10
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Number of page to be shown",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "in": "query",
                        "name": "locale",
                        "description": "Selects language of data you want to receive",
                        "required": false,
                        "type": "string",
                        "default": "uk",
                        "enum": [
                            "uk",
                            "en"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when all parameters were correct",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer"
                                },
                                "total_count": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "type": {
                                    "type": "string"
                                },
                                "posts": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Post"
                                    }
                                },
                                "_links": {
                                    "$ref": "#/definitions/PaginationLinks"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when the entities with given limit and offset are not found"
                    }
                }
            }
        },
        "/posts/{slug}": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "Find an Post by unique property {slug}",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "description": "Slug of Post to use",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-z\\d-]+$"
                    },
                    {
                        "in": "query",
                        "name": "locale",
                        "description": "Selects language of data you want to receive",
                        "required": false,
                        "type": "string",
                        "default": "uk",
                        "enum": [
                            "uk",
                            "en"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when Post by {slug} was found",
                        "schema": {
                            "$ref": "#/definitions/Post"
                        }
                    },
                    "404": {
                        "description": "Returned when Post by {slug} was not found"
                    }
                }
            }
        },
        "/performances": {
            "get": {
                "tags": [
                    "performances"
                ],
                "summary": "Returns a collection of Performances",
                "description": "Multiple values can be provided",
                "operationId": "findPerformances",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Count entries at one page, default is 10",
                        "required": false,
                        "type": "integer",
                        "default": 10
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Number of page to be shown, default is 1",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "in": "query",
                        "name": "locale",
                        "description": "Selects language of data you want to receive, default is \"uk\"",
                        "required": false,
                        "type": "string",
                        "default": "uk",
                        "enum": [
                            "uk",
                            "en"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when all parameters were correct",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer"
                                },
                                "total_count": {
                                    "type": "integer"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "performances": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Performance"
                                    }
                                },
                                "_links": {
                                    "$ref": "#/definitions/PaginationLinks"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when the entities with given limit and offset are not found"
                    }
                }
            }
        },
        "/performances/{slug}": {
            "get": {
                "tags": [
                    "performances"
                ],
                "summary": "Returns Performance by unique property {slug}",
                "operationId": "findPerformanceBySlug",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "description": "Performance slug",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-z\\d-]+$"
                    },
                    {
                        "in": "query",
                        "name": "locale",
                        "description": "Selects language of data you want to receive, default is \"uk\"",
                        "required": false,
                        "type": "string",
                        "default": "uk",
                        "enum": [
                            "uk",
                            "en"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when Performance by slug was found in database",
                        "schema": {
                            "$ref": "#/definitions/Performance"
                        }
                    },
                    "404": {
                        "description": "Returned when Performance by slug was not found in database"
                    }
                }
            }
        },
        "/performances/{slug}/roles": {
            "get": {
                "tags": [
                    "performances"
                ],
                "summary": "Returns Performance roles by his unique {slug}",
                "operationId": "findPerformanceRolesBySlug",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "description": "Performance slug",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-z\\d-]+$"
                    },
                    {
                        "in": "query",
                        "name": "locale",
                        "description": "Selects language of data you want to receive, default is \"uk\"",
                        "required": false,
                        "type": "string",
                        "default": "uk",
                        "enum": [
                            "uk",
                            "en"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when Performance by slug was found in database",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "roles": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Role"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when Performance by slug was not found in database"
                    }
                }
            }
        },
        "/performanceevents": {
            "get": {
                "tags": [
                    "performanceevents"
                ],
                "summary": "Find a collection of theatre performanceEvents",
                "description": "Returns a collection of theatre performanceEvents",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "fromDate",
                        "description": "Find entries from this date, format=dd-mm-yyyy",
                        "required": true,
                        "pattern": "\\d{2}-\\d{2}-\\d{4}|today",
                        "type": "string",
                        "format": "dateTime",
                        "default": "today"
                    },
                    {
                        "in": "query",
                        "name": "toDate",
                        "description": "Find entries to this date, format=dd-mm-yyyy",
                        "required": true,
                        "pattern": "\\d{2}-\\d{2}-\\d{4}|\\+1 Year",
                        "type": "string",
                        "format": "dateTime",
                        "default": "+1 Year"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Count of entities in collection",
                        "required": true,
                        "pattern": "\\d+|all",
                        "type": "string",
                        "default": "all"
                    },
                    {
                        "in": "query",
                        "name": "performance",
                        "description": "Performance slug",
                        "required": false,
                        "type": "string",
                        "pattern": "^[a-z\\d-]+$"
                    },
                    {
                        "in": "query",
                        "name": "locale",
                        "description": "Selects language of data you want to receive",
                        "required": true,
                        "type": "string",
                        "default": "uk",
                        "enum": [
                            "uk",
                            "en"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when all parameters were correct",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "performance_events": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PerformanceEvent"
                                    }
                                },
                                "count": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returned when date diff more than 1 year"
                    }
                }
            }
        },
        "/performanceevents/{id}": {
            "get": {
                "tags": [
                    "performanceevents"
                ],
                "description": "Returns performanceEvent by ID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "API-Key-Token",
                        "description": "API Key Token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "PerformanceEvent ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "locale",
                        "description": "Selects language of data you want to receive",
                        "required": true,
                        "type": "string",
                        "default": "uk",
                        "enum": [
                            "uk",
                            "en"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/PerformanceEvent"
                        }
                    },
                    "403": {
                        "description": "Forbidden. API-Key-Token isn't valid"
                    },
                    "404": {
                        "description": "Returned when performanceevent was not found by ID"
                    }
                }
            }
        },
        "/performanceevents/{id}/tickets": {
            "get": {
                "tags": [
                    "performanceevents"
                ],
                "description": "Returns performanceEvent Tickets by performance ID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "API-Key-Token",
                        "description": "API Key Token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "PerformanceEvent ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "locale",
                        "description": "Selects language of data you want to receive",
                        "required": true,
                        "type": "string",
                        "default": "uk",
                        "enum": [
                            "uk",
                            "en"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. API-Key-Token isn't valid"
                    },
                    "404": {
                        "description": "Returned when performanceevent was not found by ID"
                    }
                }
            }
        },
        "/histories": {
            "get": {
                "tags": [
                    "histories"
                ],
                "summary": "Finds Pets by status",
                "description": "Multiple status values can be provided with comma separated strings",
                "operationId": "findHistoryByStatusId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Status values that need to be considered for filter, default is 5",
                        "required": false,
                        "type": "integer",
                        "default": 5
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Status values that need to be considered for filter, default is 1",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "in": "query",
                        "name": "locale",
                        "description": "Status values that need to be considered for filter, default is \"uk\"",
                        "required": false,
                        "type": "string",
                        "default": "uk",
                        "enum": [
                            "uk",
                            "en"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "$ref": "#/definitions/PaginationLinks"
                                },
                                "page": {
                                    "type": "integer"
                                },
                                "total_count": {
                                    "type": "integer"
                                },
                                "histories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/History"
                                    }
                                },
                                "count": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when the entities with given limit and offset are not found"
                    }
                }
            }
        },
        "/histories/{slug}": {
            "get": {
                "tags": [
                    "histories"
                ],
                "summary": "slug histories",
                "description": "The slug histories return information about the history",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "description": "values string ",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-z\\d-]+$"
                    },
                    {
                        "in": "query",
                        "name": "locale",
                        "description": "Status values that need to be considered for filter, default is \"uk\"",
                        "required": false,
                        "type": "string",
                        "default": "uk",
                        "enum": [
                            "uk",
                            "en"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "history": {
                                    "type": "object",
                                    "items": {
                                        "$ref": "#/definitions/History"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when the entity with given not found"
                    }
                }
            }
        },
        "/tickets/{id}": {
            "get": {
                "tags": [
                    "tickets"
                ],
                "description": "Return info for ticket by ID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "API-Key-Token",
                        "description": "API Key Token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ticket ID in database",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "locale",
                        "description": "Language of data you want to receive",
                        "required": false,
                        "type": "string",
                        "default": "uk",
                        "enum": [
                            "uk",
                            "en"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Ticket"
                        }
                    },
                    "403": {
                        "description": "Forbidden. You don't have necessary permissions for the resource"
                    },
                    "404": {
                        "description": "Returned when ticket was not found"
                    }
                }
            }
        },
        "/tickets/{id}/free": {
            "patch": {
                "tags": [
                    "tickets"
                ],
                "description": "Update ticket status. Remove the ticket from the reserve.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "API-Key-Token",
                        "description": "Security API Key Token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ticket ID in database",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "Forbidden. You don't have necessary permissions for the resource"
                    },
                    "404": {
                        "description": "Returned when ticket was not found by ID"
                    }
                }
            }
        },
        "/tickets/{id}/reserve": {
            "patch": {
                "tags": [
                    "tickets"
                ],
                "description": "Update ticket status. Reserve the ticket.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "API-Key-Token",
                        "description": "Security API Key Token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ticket ID in database",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "Forbidden. You don't have necessary permissions for the resource"
                    },
                    "404": {
                        "description": "Returned when ticket was not found by ID"
                    },
                    "409": {
                        "description": "Conflict. You are not able to make reservation for the thicket"
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "tags": [
                    "orders"
                ],
                "description": "Return customer orders",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "API-Key-Token",
                        "description": "API Key Token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerOrder"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden. You don't have necessary permissions for the resource"
                    }
                }
            }
        },
        "/orders/{id}": {
            "get": {
                "tags": [
                    "orders"
                ],
                "description": "Return specific customer order by ID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "API-Key-Token",
                        "description": "Security API Key Token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Order ID in database",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerOrder"
                        }
                    },
                    "403": {
                        "description": "Forbidden. You don't have necessary permissions for the resource"
                    },
                    "404": {
                        "description": "Returned when order was not found by ID"
                    }
                }
            }
        },
        "/customers/login": {
            "post": {
                "tags": [
                    "customers"
                ],
                "summary": "Login/Signup customer into the system",
                "operationId": "loginCustomer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "API-Key-Token",
                        "description": "API Key Token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Login/Signup data",
                        "schema": {
                            "type": "object",
                            "title": "CustomerLogin",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "firstName": {
                                    "type": "string"
                                },
                                "lastName": {
                                    "type": "string"
                                },
                                "social_network": {
                                    "type": "string"
                                },
                                "social_token": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "customer": {
                                    "$ref": "#/definitions/Customer"
                                },
                                "apiKeyToken": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Invalid email/password/socialUserId/accessToken"
                    },
                    "403": {
                        "description": "Forbidden. You don't have necessary permissions for the resource"
                    }
                }
            }
        },
        "/customers/logout": {
            "get": {
                "tags": [
                    "customers"
                ],
                "summary": "Logs out current logged in customer session",
                "operationId": "logoutCustomer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "API-Key-Token",
                        "description": "API Key Token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "Forbidden. You don't have necessary permissions for the resource"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Login/Signup user into the system",
                "operationId": "loginUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "API-Key-Token",
                        "description": "API Key Token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Login/Signup data",
                        "schema": {
                            "type": "object",
                            "title": "CustomerLogin",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "firstName": {
                                    "type": "string"
                                },
                                "lastName": {
                                    "type": "string"
                                },
                                "social_network": {
                                    "type": "string"
                                },
                                "social_token": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "customer": {
                                    "$ref": "#/definitions/Customer"
                                },
                                "apiKeyToken": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Invalid email/password/socialUserId/accessToken"
                    },
                    "403": {
                        "description": "Forbidden. Incorrect API-Key-Token"
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logs out current logged in user session",
                "operationId": "logoutUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "API-Key-Token",
                        "description": "API Key Token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "Forbidden. Incorrect API-Key-Token"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "definitions": {
        "Locale": {
            "type": "string",
            "enum": [
                "uk",
                "en"
            ]
        },
        "DateTime": {
            "type": "string",
            "format": "2017-02-17T12:14:24+0200"
        },
        "Link": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                }
            }
        },
        "PaginationLinks": {
            "type": "object",
            "properties": {
                "self": {
                    "$ref": "#/definitions/Link"
                },
                "first": {
                    "$ref": "#/definitions/Link"
                },
                "prev": {
                    "$ref": "#/definitions/Link"
                },
                "next": {
                    "$ref": "#/definitions/Link"
                },
                "last": {
                    "$ref": "#/definitions/Link"
                }
            }
        },
        "Image": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "properties": {
                        "alt": {
                            "type": "string",
                            "example": "Cherkasy theatre Logo"
                        },
                        "title": {
                            "type": "string"
                        },
                        "src": {
                            "type": "string",
                            "example": "http://theatre-shevchenko.ck.ua/img/logo.png"
                        },
                        "width": {
                            "type": "integer",
                            "example": 800
                        },
                        "height": {
                            "type": "integer",
                            "example": 600
                        }
                    }
                }
            }
        },
        "ImageBlock": {
            "type": "object",
            "properties": {
                "reference": {
                    "$ref": "#/definitions/Image"
                },
                "employee_small": {
                    "$ref": "#/definitions/Image"
                },
                "employee_big": {
                    "$ref": "#/definitions/Image"
                }
            }
        },
        "GalleryImage": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "images": {
                    "$ref": "#/definitions/ImageBlock"
                }
            }
        },
        "Performance": {
            "type": "object",
            "properties": {
                "locale": {
                    "$ref": "#/definitions/Locale"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "premiere": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "mainPicture": {
                    "$ref": "#/definitions/ImageBlock"
                },
                "sliderImage": {
                    "$ref": "#/definitions/ImageBlock"
                }
            }
        },
        "PerformanceEvent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "date_time": {
                    "type": "string"
                },
                "venue": {
                    "$ref": "#/definitions/Venue"
                },
                "year": {
                    "type": "integer"
                },
                "performance": {
                    "$ref": "#/definitions/Performance"
                }
            }
        },
        "Employee": {
            "type": "object",
            "properties": {
                "locale": {
                    "$ref": "#/definitions/Locale"
                },
                "first_name": {
                    "type": "string",
                    "example": "Larisa"
                },
                "last_name": {
                    "type": "string",
                    "example": "Burlaka"
                },
                "dob": {
                    "$ref": "#/definitions/DateTime"
                },
                "position": {
                    "type": "string",
                    "example": "actress"
                },
                "biography": {
                    "type": "string",
                    "example": "Working in theatre since 2001"
                },
                "slug": {
                    "type": "string",
                    "example": "larisa-burlaka"
                },
                "gallery": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GalleryImage"
                    }
                },
                "avatar": {
                    "$ref": "#/definitions/ImageBlock"
                }
            }
        },
        "Role": {
            "type": "object",
            "properties": {
                "locale": {
                    "$ref": "#/definitions/Locale"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "performance": {
                    "$ref": "#/definitions/Performance"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "locale": {
                    "$ref": "#/definitions/Locale"
                }
            }
        },
        "History": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "locale": {
                    "$ref": "#/definitions/Locale"
                },
                "year": {
                    "type": "integer"
                },
                "created_by": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "mainPicture": {
                    "type": "object",
                    "properties": {
                        "reference": {
                            "$ref": "#/definitions/Image"
                        },
                        "history_small": {
                            "$ref": "#/definitions/Image"
                        },
                        "history_big": {
                            "$ref": "#/definitions/Image"
                        }
                    }
                }
            }
        },
        "Post": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "short_description": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "locale": {
                    "$ref": "#/definitions/Locale"
                },
                "pinned": {
                    "type": "boolean"
                },
                "mainPicture": {
                    "type": "object",
                    "properties": {
                        "reference": {
                            "$ref": "#/definitions/Image"
                        },
                        "post_small": {
                            "$ref": "#/definitions/Image"
                        },
                        "post_big": {
                            "$ref": "#/definitions/Image"
                        },
                        "post_main": {
                            "$ref": "#/definitions/Image"
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            }
        },
        "Venue": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "hallTemplate": {
                    "type": "string"
                }
            }
        },
        "VenueSector": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "venue": {
                    "$ref": "#/definitions/Venue"
                }
            }
        },
        "Seat": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "row": {
                    "type": "integer"
                },
                "place": {
                    "type": "integer"
                },
                "venueSector": {
                    "$ref": "#/definitions/VenueSector"
                },
                "priceCategory": {
                    "$ref": "#/definitions/PriceCategory"
                }
            }
        },
        "PriceCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "venue": {
                    "$ref": "#/definitions/Venue"
                }
            }
        },
        "CustomerOrder": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "tickets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Ticket"
                    }
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "paymentStatus": {
                    "$ref": "#/definitions/PaymentStatus"
                }
            }
        },
        "Ticket": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "series": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "performanceEvent": {
                    "$ref": "#/definitions/PerformanceEvent"
                },
                "seat": {
                    "$ref": "#/definitions/Seat"
                },
                "status": {
                    "$ref": "#/definitions/TicketStatus"
                }
            }
        },
        "Customer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "PaymentStatus": {
            "type": "string",
            "enum": [
                "pending",
                "paid",
                "rejected"
            ]
        },
        "TicketStatus": {
            "type": "string",
            "enum": [
                "free",
                "booked",
                "ordered"
            ]
        }
    }
}