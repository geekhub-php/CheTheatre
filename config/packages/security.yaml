security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt|error)|css|images|js)/
            security: false

        main:
            pattern:  ^/(admin|login|two_factor_auth)
            anonymous: lazy
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
            two_factor:
                auth_form_path: 2fa_login
                check_path: 2fa_login_check

    role_hierarchy:
            ROLE_SONATA_FOO_ADMIN:
                - ROLE_SONATA_ADMIN_DEMO_FOO_DELETE
                - ROLE_SONATA_ADMIN_DEMO_FOO_EXPORT
                - ROLE_SONATA_ADMIN_DEMO_FOO_CREATE
                - ROLE_SONATA_ADMIN_DEMO_FOO_EDIT
                - ROLE_SONATA_ADMIN_DEMO_FOO_LIST
                - ROLE_SONATA_ADMIN_DEMO_FOO_VIEW
                - ROLE_SONATA_ADMIN
            ROLE_SUPER_ADMIN: [ROLE_SONATA_FOO_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        # activate different ways to authenticate
        # https://symfony.com/doc/current/security.html#firewalls-authentication

        # https://symfony.com/doc/current/security/impersonating_user.html
        # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, roles: ROLE_SUPER_ADMIN }
        - { path: ^/logout, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/two_factor_auth, role: IS_AUTHENTICATED_2FA_IN_PROGRESS }

    encoders:
        App\Entity\User:
            algorithm: auto
